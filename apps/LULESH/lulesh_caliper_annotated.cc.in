#include<string>
#include "lulesh_caliper_annotated.h"
#include <caliper/cali.h>
#include <time.h>
#include <cstdlib>
#include <algorithm>
using valueType = const char*;
valueType compilerName = "@CMAKE_CXX_COMPILER_ID@";
valueType compilerVersion = "@CMAKE_CXX_COMPILER_VERSION@";
valueType blameThisPerson = "@FAULT@";
valueType compilerFlags = "@CMAKE_CXX_FLAGS@";
void record_caliper_metadata(){
  time_t timer;
  /** Not recording time, Caliper has issues with ':' in values? */
  //time(&timer);
  //struct tm* rt = localtime(&timer);
  setGlobal("Compiler Name",compilerName);
  setGlobal("Compiler Version",compilerVersion);
  setGlobal("Code Builder",blameThisPerson);
  setGlobal("Compiler Flags",compilerFlags);
  std::string hostname = getenv("HOSTNAME");
  auto firstdigit = std::find_if(std::begin(hostname),std::end(hostname),[=](const char in){
      return isdigit(in);
  });
  std::string cluster;
  if(firstdigit == hostname.end()){
    cluster = hostname;
  }
  else{
    cluster = std::string(std::begin(hostname),firstdigit);
  }
  setGlobal("Hostname",hostname.c_str());
  setGlobal("Cluster",cluster.c_str());
  //setGlobal("Run Start Time",asctime(rt));
}

void enable_caliper(){
  cali_config_preset("CALI_SERVICES_ENABLE","event:aggregate:timestamp:recorder");
  cali_config_preset("CALI_TIMER_INCLUSIVE_DURATION","true");
}
